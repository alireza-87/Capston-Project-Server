name: UnitTesting.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 14.15.1]
        mongodb-version: [4.4]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.3.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
    - name: Make envfile
      uses: SpicyPizza/create-envfile@v1
      with:
        envkey_DEBUG: false
        envkey_DB_CONNECTION_TEST_URL: "mongodb://localhost:27017/capstone"
        envkey_DIR_UPLOAD: ${{ secrets.DIR_UPLOAD_TEST }}
        envkey_JWT_SECRET: ${{ secrets.SECRET_JWT }}
        envkey_PROTOCOL_LINK: ${{ secrets.PROTOCOL_LINK}}
        envkey_EMAIL_USER: ${{ secrets.EMAIL_USER}}
        envkey_EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
        envkey_HOST: ${{ secrets.HOST }}
        envkey_EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
        envkey_EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
        envkey_DIR_UPLOAD_TEST: ${{ secrets.DIR_UPLOAD_TEST }}
        directory: ../
        file_name: .env
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
  deploy:
    name: Deply to Server
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v1
      - name: Deploy to server
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.CAPSTONE_KEY }}
          ARGS: "-rltgoDzvO"
          REMOTE_HOST: ${{ secrets.DEPLOY_HOST }}
          REMOTE_PORT: ${{ secrets.DEPLOY_PORT }}
          REMOTE_USER: ${{ secrets.DEPLOY_USER }}
          TARGET: ${{ secrets.DEPLOY_DIR }}
  env_file:
    name: creat Env file
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.CAPSTONE_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            cd ${{ secrets.CAPSTONE_DIR }}
            rm .env
            echo DIR_UPLOAD=${{ secrets.CAPSTONE_DIR_UPLOAD }} > .env
            echo DOMAIN=${{ secrets.CAPSTONE_DOMAIN }} >> .env
            echo PORT=${{ secrets.CAPSTONE_PORT }} >> .env
            echo JWT_SECRET=${{ secrets.CAPSTONE_JWT_SECRET }} >> .env
            echo PROTOCOL_LINK=${{ secrets.CAPSTONE_PROTOCOL_LINK }} >> .env
            echo EMAIL_USER=${{ secrets.CAPSTONE_EMAIL_USER }} >> .env
            echo EMAIL_PASS=${{ secrets.CAPSTONE_EMAIL_PASS }} >> .env
            echo HOST=${{ secrets.CAPSTONE_EMAIL_HOST }} >> .env
            echo EMAIL_FROM=${{ secrets.CAPSTONE_EMAIL_FROM }} >> .env
            echo EMAIL_PORT=${{ secrets.CAPSTONE_EMAIL_PORT }} >> .env
            echo DB_CONNECTION_PROD_URL=${{ secrets.DB_CONNECTION_PROD_URL }} >> .env
            echo NODE_ENV=${{ secrets.NODE_ENV_PRODUCTION}} >> .env
            echo SMS_ACCOUNT_SID=${{ secrets.SMS_ACCOUNT_SID }} >> .env
            echo SMS_AUTH_TOKEN=${{ secrets.SMS_AUTH_TOKEN }} >> .env
            echo SMS_NUMBER=${{ secrets.SMS_NUMBER }} >> .env
            echo IMAGE_BASE=${{ secrets.CAPSTONE_IMAGE_BASE }} >> .env
            npm install
